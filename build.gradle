import groovyx.gpars.GParsPool

apply plugin: 'groovy'
apply plugin: 'idea'

ext.startTime = System.currentTimeMillis()

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.codehaus.gpars:gpars:1.1.0"
    }

}

def concurrentMethod(int index, String threadName) {
    Binding binding = new Binding();
    binding.variables['args'] = [index]
    binding.variables['threadName'] = threadName
    
    def shell = new GroovyShell(binding)
    
    def groovySrc = file('src/main/groovy/myscript.groovy')
    Object result = shell.evaluate(groovySrc)
}

String getThreadName(names) {
    String currentName = Thread.currentThread().name
    if (!names.contains(currentName)) names << currentName

    "t${names.indexOf(currentName).toString().padLeft(2, '0')}"
}


task run << {
    def cores   = Runtime.runtime.availableProcessors()
    def threads = 10
    println "    > Using $threads threads on $cores cores..."
    def names = []
    GParsPool.withPool(threads) {
        [1000, 2000, 1000, 3000].eachParallel {
            def name = getThreadName(names)
            concurrentMethod(it, name)
        }
    }
    logger.quiet("Run complete!")
}